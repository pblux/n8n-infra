{
  "name": "business-assistant - v1.2",
  "nodes": [
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4.1-mini",
          "mode": "list",
          "cachedResultName": "gpt-4.1-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        1620,
        -160
      ],
      "id": "925cdfcd-2ecc-4577-9ebd-731a734733db",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "rsPJz7hiU81aTa8b",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "5a42924e-9b8e-47d1-9de8-5a53eeec809c",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -360,
        -280
      ],
      "id": "8aa29460-c046-4b40-a68a-903bc26b563a",
      "name": "Chatwoot",
      "webhookId": "5a42924e-9b8e-47d1-9de8-5a53eeec809c"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "180eac52-f6df-4be5-b8af-d79424d92569",
              "name": "flowdata.project_name",
              "value": "tu.ia",
              "type": "string"
            },
            {
              "id": "91d10cd7-a44f-42c9-9a76-fdf38e5778ea",
              "name": "flowdata.url",
              "value": "https://chatwoot.tuia.lat",
              "type": "string"
            },
            {
              "id": "8bb15ae9-aaa0-4b2f-bfb5-a277f4dae582",
              "name": "flowdata.incoming",
              "value": "={{ $json.body.message_type == \"incoming\" }}",
              "type": "boolean"
            },
            {
              "id": "e24befd1-922a-42fc-80b4-ad26331ed110",
              "name": "flowdata.human-pause",
              "value": "={{ $json.body.conversation.labels.includes(\"human-pause\") }}",
              "type": "boolean"
            },
            {
              "id": "25093dd1-cee2-47ab-a60b-6d8f8739ca7d",
              "name": "flowdata.human",
              "value": "={{ $json.body.conversation.labels.includes(\"pablo\") }}",
              "type": "boolean"
            },
            {
              "id": "8987c1d9-84f2-477e-84fe-3d161c32cb57",
              "name": "flowdata.admin",
              "value": "={{ $json.body.conversation.labels.includes(\"admin\") }}",
              "type": "boolean"
            },
            {
              "id": "1b2a551e-92e9-4ae5-a943-f496759199b4",
              "name": "flowdata.account_id",
              "value": "={{ $json.body.account.id }}",
              "type": "number"
            },
            {
              "id": "8c10811b-3923-4b22-b868-fec06fa856ed",
              "name": "flowdata.conversation_id",
              "value": "={{ $json.body.conversation.messages[0].conversation_id }}",
              "type": "number"
            },
            {
              "id": "6ef36fd7-bef2-4f0d-a5a7-84b79681d4c2",
              "name": "flowdata.created_at",
              "value": "={{ $json.body.conversation.messages[0].created_at.toDateTime('s').toISO() }}",
              "type": "string"
            },
            {
              "id": "c2b0e878-3336-4815-8971-bcee6673b0de",
              "name": "flowdata.message_id",
              "value": "={{ $json.body.conversation.messages[0].id }}",
              "type": "number"
            },
            {
              "id": "ca83f9c5-edff-45aa-b924-4365b86aa076",
              "name": "flowdata.content",
              "value": "={{ $json.body.conversation.messages[0].content }}",
              "type": "string"
            },
            {
              "id": "cc94dfe0-140b-4bbe-98fd-b66653c915d6",
              "name": "flowdata.file_type",
              "value": "={{ $json.body.conversation.messages[0].attachments[0].file_type}}",
              "type": "string"
            },
            {
              "id": "c9065bdc-aa73-4426-962a-f9daf2468871",
              "name": "flowdata.media_url",
              "value": "={{ $json.body.conversation.messages[0].attachments[0].data_url }}",
              "type": "string"
            },
            {
              "id": "8303ea5d-cc2b-4e12-9224-858afe4f8aec",
              "name": "flowdata.phone_number",
              "value": "={{ $json.body.sender.phone_number }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -140,
        -380
      ],
      "id": "8f29285d-d868-40c7-a4cc-67a63710d417",
      "name": "Set data"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('Set data').item.json.flowdata.url }}/api/v1/accounts/{{ $('Set data').item.json.flowdata.account_id }}/conversations/{{ $('Set data').item.json.flowdata.conversation_id }}/messages/",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "content",
              "value": "={{ $json.output }}"
            },
            {
              "name": "private",
              "value": "false"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2400,
        -280
      ],
      "id": "104e1cb6-ba7b-4c60-a1b5-99d81faa2857",
      "name": "Send message",
      "credentials": {
        "httpHeaderAuth": {
          "id": "a89hEWXzRSBs7DUC",
          "name": "Chatwoot - Header Auth account"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('Set data').item.json.flowdata.conversation_id }}",
        "tableName": "tu_ia_n8n_chat_histories",
        "contextWindowLength": 20
      },
      "type": "@n8n/n8n-nodes-langchain.memoryPostgresChat",
      "typeVersion": 1.3,
      "position": [
        1740,
        -160
      ],
      "id": "136ea3f9-d4e1-43a0-aa8c-f7a16fd3413a",
      "name": "Postgres Chat Memory",
      "credentials": {
        "postgres": {
          "id": "YK6uFr06cMcF6jq9",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "8dbf19e8-e871-4c1d-9dc2-f1d4f4103841",
              "leftValue": "={{ $json.flowdata.admin }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "false",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        80,
        -380
      ],
      "id": "a3e76bb0-3479-4b7e-8e62-e980d1b00561",
      "name": "Filter admin",
      "disabled": true
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "2f9ad325-43d1-40f3-867b-a1f883cbf221",
              "leftValue": "={{ $json.flowdata.admin }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        300,
        -380
      ],
      "id": "0d329e37-c791-47ed-82d1-63f12f6f759d",
      "name": "Filter all except admin",
      "disabled": true
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $('message-buffer').item.json.output }}",
        "options": {
          "systemMessage": "={{ $json.system_message }}",
          "maxIterations": 10
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.8,
      "position": [
        1720,
        -380
      ],
      "id": "101511ba-071b-44b6-97ea-937a72912346",
      "name": "Main agent"
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "PhtBjmpScsY7YrrN",
          "mode": "list",
          "cachedResultName": "detect-language-agent-v1"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "default_language": "english",
            "user_message": "={{ $json.output }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "user_message",
              "displayName": "user_message",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "default_language",
              "displayName": "default_language",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": true
        },
        "options": {}
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.2,
      "position": [
        1180,
        -380
      ],
      "id": "08b11f95-9fd8-4100-970c-0d45ddcaf52b",
      "name": "detect-language-agent-v1"
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "o88GDhdNEmtzg9SY",
          "mode": "list",
          "cachedResultName": "build-system-message-v1"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "response-language": "={{ $json.output }}",
            "main-prompt": "=# ROLE\n\nYou are the main AI agent responsible for understanding user requests and delivering helpful, accurate responses.\n\n# TOOLS\n\nYou have access to various connected tools, including sub-agents with domain expertise, document retrieval systems, and APIs.\n\n# TASK\n\nInterpret the user's message, determine if a tool is needed, delegate as required, and synthesize a clear and user-friendly response.\n\n## Scheduling Instructions\n\nYou are responsible for helping the user manage their appointments (create, reschedule, or cancel) using the connected tool `scheduling-agent`. When the user expresses an intent related to appointments, extract their request and convert it into a clear natural language command (`query`) to send to the tool.\n\nDo not attempt to access the calendar yourself. Always use the `scheduling-agent` tool to perform any scheduling actions.\n\n# GUIDELINES\n\n- Always prioritize accuracy and helpfulness.\n- Use connected tools when relevant instead of guessing.\n- Do not expose tool names, logic, or internal structure to the user.\n- Keep the tone informative and aligned with the user's query.\n"
          },
          "matchingColumns": [
            "language"
          ],
          "schema": [
            {
              "id": "response-language",
              "displayName": "response-language",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "main-prompt",
              "displayName": "main-prompt",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": true
        },
        "options": {
          "waitForSubWorkflow": true
        }
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.2,
      "position": [
        1400,
        -380
      ],
      "id": "d3ce7419-05bc-4cc7-b3b1-aab27595b3bd",
      "name": "build-system-message-v1"
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "kI0ZWzuRYYcbssQ8",
          "mode": "list",
          "cachedResultName": "expert-resolver-v1"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "query": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('query', ``, 'string') }}",
            "google-doc-id": "11PhKxiZr_C_x2eGlJpM7yceBZoJtm8rA9XgyZWSeOEY",
            "system-message": "=You are an AI sub-agent with expert-level knowledge in **this business**. Your role is to assist the main agent by answering topic-specific queries with clarity, accuracy, and based on the information available through your connected tool.\n\nUse your connected tool to retrieve and reference all necessary background and factual information relevant to the topic.\n\nWhen answering:\n\n- Be concise and focused.\n- Avoid speculation or generalizations beyond the information retrieved through the connected tool, unless explicitly requested.\n- Return only the factual response or structured information that helps the main agent build a coherent answer.\n- Do not refer to yourself or the main agent; just return the content.\n- If the question cannot be answered using the connected tool, clearly state that the necessary information is not available.\n"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "query",
              "displayName": "query",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "system-message",
              "displayName": "system-message",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "google-doc-id",
              "displayName": "google-doc-id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.2,
      "position": [
        1860,
        -160
      ],
      "id": "11093538-5c1e-4252-98e1-b0b6aead8080",
      "name": "expert-resolver-v1"
    },
    {
      "parameters": {
        "description": "=Use this tool to manage appointments in Google Calendar on behalf of the client. It supports creating, rescheduling, and cancelling events. The tool receives natural language queries and does **not** interact directly with the client. It checks availability and responds with a success message, an error, or alternative time suggestions based on allowed scheduling rules.\n\nThis tool should be invoked only when the user expresses a clear scheduling intent.\n\n## Inputs\n\n- `client_name` (string): The full name of the client.\n- `query` (string): A natural language instruction describing the scheduling request.\n\n---\n\n## Query Examples\n\n### Schedule Appointment\n\n- `Schedule a haircut for Tuesday, June 17 at 4:00 PM`\n- `Book a consultation on Thursday at 10 AM`\n\n### Reschedule Appointment\n\n- `Reschedule my appointment to Wednesday, June 18 at 3:00 PM`\n- `Move my appointment to Friday morning`\n\n### Cancel Appointment\n\n- `Cancel my appointment on June 17`\n- `I need to cancel my haircut booking`\n",
        "workflowId": {
          "__rl": true,
          "value": "PKkA7XvNjOHsVVJP",
          "mode": "list",
          "cachedResultName": "scheduling-agent - v1"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "client_id": "={{ $('Set data').item.json.flowdata.conversation_id }}",
            "client_phone_number": "={{ $('Set data').item.json.flowdata.phone_number }}",
            "query": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('query', ``, 'string') }}",
            "allowed_times_and_days": "Lunes a viernes de 7hs a 15hs.",
            "professional_name": "Ezequiel"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "client_phone_number",
              "displayName": "client_phone_number",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "client_id",
              "displayName": "client_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "number"
            },
            {
              "id": "professional_name",
              "displayName": "professional_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "query",
              "displayName": "query",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "allowed_times_and_days",
              "displayName": "allowed_times_and_days",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.2,
      "position": [
        1980,
        -160
      ],
      "id": "1b4162c3-bb20-4b9c-8e2d-0f8fb6291595",
      "name": "scheduling-agent"
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1sDZUF0X4rgCx9yUP9EYAC8Rrk5ZCBb9VE8ZVV9V89Ik",
          "mode": "list",
          "cachedResultName": "Evaluations",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1sDZUF0X4rgCx9yUP9EYAC8Rrk5ZCBb9VE8ZVV9V89Ik/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 959673666,
          "mode": "list",
          "cachedResultName": "check-general",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1sDZUF0X4rgCx9yUP9EYAC8Rrk5ZCBb9VE8ZVV9V89Ik/edit#gid=959673666"
        }
      },
      "type": "n8n-nodes-base.evaluationTrigger",
      "typeVersion": 4.6,
      "position": [
        -580,
        -480
      ],
      "id": "9cd0d01b-2681-44bc-a633-d2882845df3b",
      "name": "When fetching a dataset row",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "NfCrHnwCPF8acjMY",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "8bb15ae9-aaa0-4b2f-bfb5-a277f4dae582",
              "name": "body.message_type",
              "value": "=incoming",
              "type": "string"
            },
            {
              "id": "e24befd1-922a-42fc-80b4-ad26331ed110",
              "name": "body.conversation.labels",
              "value": "=[]",
              "type": "array"
            },
            {
              "id": "cc94dfe0-140b-4bbe-98fd-b66653c915d6",
              "name": "body.attachments",
              "value": "=[]",
              "type": "array"
            },
            {
              "id": "43ab7f16-533b-4d5b-a6da-821b7050c8be",
              "name": "body.conversation.messages[0].attachments[0].file_type",
              "value": "=",
              "type": "string"
            },
            {
              "id": "1b2a551e-92e9-4ae5-a943-f496759199b4",
              "name": "body.account.id",
              "value": "=1",
              "type": "number"
            },
            {
              "id": "8c10811b-3923-4b22-b868-fec06fa856ed",
              "name": "body.conversation.messages[0].conversation_id",
              "value": "=1000000",
              "type": "number"
            },
            {
              "id": "6ef36fd7-bef2-4f0d-a5a7-84b79681d4c2",
              "name": "body.conversation.messages[0].created_at",
              "value": "={{ Math.floor(Date.now() / 1000) }}",
              "type": "string"
            },
            {
              "id": "c2b0e878-3336-4815-8971-bcee6673b0de",
              "name": "body.conversation.messages[0].id",
              "value": "={{ $json.row_number }}",
              "type": "number"
            },
            {
              "id": "ca83f9c5-edff-45aa-b924-4365b86aa076",
              "name": "body.conversation.messages[0].content",
              "value": "={{ $json.user_message }}",
              "type": "string"
            },
            {
              "id": "c9065bdc-aa73-4426-962a-f9daf2468871",
              "name": "body.conversation.messages[0].attachments[0].data_url",
              "value": "=",
              "type": "string"
            },
            {
              "id": "fa382860-2e45-4013-a83f-91fb70b9fab7",
              "name": "body.conversation.timestamp",
              "value": "={{ Math.floor(Date.now() / 1000) }}",
              "type": "string"
            },
            {
              "id": "28f689a1-7ffd-4913-9ea5-0c3d703980e7",
              "name": "evaluation",
              "value": true,
              "type": "boolean"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -360,
        -480
      ],
      "id": "be774bd8-e86c-4ceb-9e19-d56cf4e9f455",
      "name": "Set data for evaluations"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "5f706e6f-3d48-4212-ab70-3b3ec93a95a8",
              "leftValue": "={{ $('Set data').item.json.flowdata.conversation_id }}",
              "rightValue": 1000000,
              "operator": {
                "type": "number",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        2180,
        -380
      ],
      "id": "db3a116f-af0e-4aca-86c8-42daf7ea4a90",
      "name": "If evaluation"
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1sDZUF0X4rgCx9yUP9EYAC8Rrk5ZCBb9VE8ZVV9V89Ik",
          "mode": "list",
          "cachedResultName": "Evaluations",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1sDZUF0X4rgCx9yUP9EYAC8Rrk5ZCBb9VE8ZVV9V89Ik/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 959673666,
          "mode": "list",
          "cachedResultName": "check-general",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1sDZUF0X4rgCx9yUP9EYAC8Rrk5ZCBb9VE8ZVV9V89Ik/edit#gid=959673666"
        },
        "outputs": {
          "values": [
            {
              "outputName": "actual_output",
              "outputValue": "={{ $json.output }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.evaluation",
      "typeVersion": 4.6,
      "position": [
        2400,
        -480
      ],
      "id": "68200564-94fd-4210-9593-cbc2cc6fea71",
      "name": "Evaluation1",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "NfCrHnwCPF8acjMY",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "uXKbJFPDBH3efcmA",
          "mode": "list",
          "cachedResultName": "transcribe-media - v1.1"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "text": "={{ $('Set data').item.json.flowdata.content }}",
            "media_url": "={{ $('Set data').item.json.flowdata.media_url }}",
            "media_type": "={{ $('Set data').item.json.flowdata.file_type }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "text",
              "displayName": "text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "media_type",
              "displayName": "media_type",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "media_url",
              "displayName": "media_url",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": true
        },
        "options": {
          "waitForSubWorkflow": true
        }
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.2,
      "position": [
        740,
        -380
      ],
      "id": "2d8ab7e7-dd30-48a0-a04e-521ecce6cc21",
      "name": "transcribe-media-v1.1"
    },
    {
      "parameters": {
        "operation": "push",
        "list": "={{ $('Set data').item.json.flowdata.project_name}}_{{ $('Set data').item.json.flowdata.account_id}}_{{ $('Set data').item.json.flowdata.conversation_id }}",
        "messageData": "={\"last_message_from\": \"bot\"}",
        "tail": true
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        2620,
        -280
      ],
      "id": "b9e75f7e-e48b-412f-a793-8fae3cb12e75",
      "name": "Set last message from bot",
      "credentials": {
        "redis": {
          "id": "AT4Iqbzd8lEoYu8w",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "90JAgf2o1Fb4YUB4",
          "mode": "list",
          "cachedResultName": "firewall - v1.1"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "human": "={{ $json.flowdata.human }}",
            "incoming": "={{ $json.flowdata.incoming }}",
            "conversation_id": "={{ $json.flowdata.conversation_id }}",
            "account_id": "={{ $json.flowdata.account_id }}",
            "message_id": "={{ $json.flowdata.message_id }}",
            "message_content": "={{ $json.flowdata.content }}",
            "chatwoot_url": "={{ $json.flowdata.url }}",
            "created_at": "={{ $('Set data').item.json.flowdata.created_at }}",
            "project_name": "={{ $json.flowdata.project_name }}",
            "human_pause_duration_in_minuts": 3,
            "human_pause": "={{ $json.flowdata['human-pause'] }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "project_name",
              "displayName": "project_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "chatwoot_url",
              "displayName": "chatwoot_url",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "account_id",
              "displayName": "account_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "number"
            },
            {
              "id": "conversation_id",
              "displayName": "conversation_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "number"
            },
            {
              "id": "message_id",
              "displayName": "message_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "number"
            },
            {
              "id": "message_content",
              "displayName": "message_content",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "incoming",
              "displayName": "incoming",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "boolean"
            },
            {
              "id": "human",
              "displayName": "human",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "boolean"
            },
            {
              "id": "human_pause",
              "displayName": "human_pause",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "boolean",
              "removed": false
            },
            {
              "id": "human_pause_duration_in_minuts",
              "displayName": "human_pause_duration_in_minuts",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "number",
              "removed": false
            },
            {
              "id": "created_at",
              "displayName": "created_at",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": true
        },
        "options": {
          "waitForSubWorkflow": true
        }
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.2,
      "position": [
        520,
        -380
      ],
      "id": "5a8d7825-1831-474a-9d8c-0bd1a5ffe5d3",
      "name": "firewall"
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "xZDlv3ZFE1h36MYb",
          "mode": "list",
          "cachedResultName": "message-buffer - v1.1"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "message_id": "={{ $('Set data').item.json.flowdata.message_id }}",
            "session_id": "={{ $('Set data').item.json.flowdata.project_name }}_{{ $('Set data').item.json.flowdata.account_id }}_{{ $('Set data').item.json.flowdata.conversation_id }}_buffer",
            "session_input": "={{ $json.text }}",
            "session_timestamp": "={{ $('Set data').item.json.flowdata.created_at.toDateTime() }}",
            "time_to_wait": "5"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "message_id",
              "displayName": "message_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "number"
            },
            {
              "id": "session_id",
              "displayName": "session_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "session_input",
              "displayName": "session_input",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "session_timestamp",
              "displayName": "session_timestamp",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "time_to_wait",
              "displayName": "time_to_wait",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": true
        },
        "options": {
          "waitForSubWorkflow": true
        }
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.2,
      "position": [
        960,
        -380
      ],
      "id": "f7094b03-0d0d-4a77-884e-0b2d6dcce1ec",
      "name": "message-buffer"
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "mzvNC7jcWWGvlZOE",
          "mode": "list",
          "cachedResultName": "clean-supabase"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "chatHistoriesTableName": "tu_ia_n8n_chat_histories",
            "agendaTableName": "tu_ia_agenda",
            "numberOfRecordsToKeep": 12
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "chatHistoriesTableName",
              "displayName": "chatHistoriesTableName",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "numberOfRecordsToKeep",
              "displayName": "numberOfRecordsToKeep",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "number"
            },
            {
              "id": "agendaTableName",
              "displayName": "agendaTableName",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": true
        },
        "options": {}
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.2,
      "position": [
        -360,
        -20
      ],
      "id": "98f950c4-d521-4653-a31b-18cd760debc3",
      "name": "clean-supabase"
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "weeks"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        -580,
        -20
      ],
      "id": "5238bfc2-9e3c-4cd7-bb57-7d2e6b770c50",
      "name": "Clean databases"
    }
  ],
  "connections": {
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Main agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Chatwoot": {
      "main": [
        [
          {
            "node": "Set data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set data": {
      "main": [
        [
          {
            "node": "Filter admin",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send message": {
      "main": [
        [
          {
            "node": "Set last message from bot",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres Chat Memory": {
      "ai_memory": [
        [
          {
            "node": "Main agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Filter admin": {
      "main": [
        [
          {
            "node": "Filter all except admin",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter all except admin": {
      "main": [
        [
          {
            "node": "firewall",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Main agent": {
      "main": [
        [
          {
            "node": "If evaluation",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "detect-language-agent-v1": {
      "main": [
        [
          {
            "node": "build-system-message-v1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "build-system-message-v1": {
      "main": [
        [
          {
            "node": "Main agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "expert-resolver-v1": {
      "ai_tool": [
        [
          {
            "node": "Main agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "scheduling-agent": {
      "ai_tool": [
        [
          {
            "node": "Main agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "When fetching a dataset row": {
      "main": [
        [
          {
            "node": "Set data for evaluations",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set data for evaluations": {
      "main": [
        [
          {
            "node": "Set data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If evaluation": {
      "main": [
        [
          {
            "node": "Evaluation1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Send message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "transcribe-media-v1.1": {
      "main": [
        [
          {
            "node": "message-buffer",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set last message from bot": {
      "main": [
        []
      ]
    },
    "firewall": {
      "main": [
        [
          {
            "node": "transcribe-media-v1.1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "message-buffer": {
      "main": [
        [
          {
            "node": "detect-language-agent-v1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Clean databases": {
      "main": [
        [
          {
            "node": "clean-supabase",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  }
}