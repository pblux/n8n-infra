{
  "name": "business-assistant - v2",
  "nodes": [
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4o-mini",
          "mode": "list",
          "cachedResultName": "gpt-4o-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        1648,
        -256
      ],
      "id": "925cdfcd-2ecc-4577-9ebd-731a734733db",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "leOLHYOtXey0DgzA",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "5a42924e-9b8e-47d1-9de8-5a53eeec809c",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -368,
        -288
      ],
      "id": "8aa29460-c046-4b40-a68a-903bc26b563a",
      "name": "Chatwoot",
      "webhookId": "5a42924e-9b8e-47d1-9de8-5a53eeec809c"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "180eac52-f6df-4be5-b8af-d79424d92569",
              "name": "flowdata.project_name",
              "value": "pzblo",
              "type": "string"
            },
            {
              "id": "91d10cd7-a44f-42c9-9a76-fdf38e5778ea",
              "name": "flowdata.url",
              "value": "https://services-chatwoot.qn7hmw.easypanel.host",
              "type": "string"
            },
            {
              "id": "8bb15ae9-aaa0-4b2f-bfb5-a277f4dae582",
              "name": "flowdata.incoming",
              "value": "={{ $json.body.message_type == \"incoming\" }}",
              "type": "boolean"
            },
            {
              "id": "e24befd1-922a-42fc-80b4-ad26331ed110",
              "name": "flowdata.human-pause",
              "value": "={{ $json.body.conversation.labels.includes(\"human-pause\") }}",
              "type": "boolean"
            },
            {
              "id": "25093dd1-cee2-47ab-a60b-6d8f8739ca7d",
              "name": "flowdata.human",
              "value": "={{ $json.body.conversation.labels.includes(\"human\") }}",
              "type": "boolean"
            },
            {
              "id": "8987c1d9-84f2-477e-84fe-3d161c32cb57",
              "name": "flowdata.admin",
              "value": "={{ $json.body.conversation.labels.includes(\"admin\") }}",
              "type": "boolean"
            },
            {
              "id": "1b2a551e-92e9-4ae5-a943-f496759199b4",
              "name": "flowdata.account_id",
              "value": "={{ $json.body.account.id }}",
              "type": "number"
            },
            {
              "id": "8c10811b-3923-4b22-b868-fec06fa856ed",
              "name": "flowdata.conversation_id",
              "value": "={{ $json.body.conversation.messages[0].conversation_id }}",
              "type": "number"
            },
            {
              "id": "6ef36fd7-bef2-4f0d-a5a7-84b79681d4c2",
              "name": "flowdata.created_at",
              "value": "={{ $json.body.conversation.messages[0].created_at.toDateTime('s').toISO() }}",
              "type": "string"
            },
            {
              "id": "c2b0e878-3336-4815-8971-bcee6673b0de",
              "name": "flowdata.message_id",
              "value": "={{ $json.body.conversation.messages[0].id }}",
              "type": "number"
            },
            {
              "id": "ca83f9c5-edff-45aa-b924-4365b86aa076",
              "name": "flowdata.content",
              "value": "={{ $json.body.conversation.messages[0].content }}",
              "type": "string"
            },
            {
              "id": "cc94dfe0-140b-4bbe-98fd-b66653c915d6",
              "name": "flowdata.file_type",
              "value": "={{ $json.body.conversation.messages[0].attachments[0].file_type}}",
              "type": "string"
            },
            {
              "id": "c9065bdc-aa73-4426-962a-f9daf2468871",
              "name": "flowdata.media_url",
              "value": "={{ $json.body.conversation.messages[0].attachments[0].data_url }}",
              "type": "string"
            },
            {
              "id": "8303ea5d-cc2b-4e12-9224-858afe4f8aec",
              "name": "flowdata.phone_number",
              "value": "={{ $json.body.sender.phone_number }}",
              "type": "string"
            },
            {
              "id": "b75bddb1-0a3c-408d-89b3-5586e5b33f64",
              "name": "evaluation",
              "value": "={{ $json.evaluation }}",
              "type": "boolean"
            },
            {
              "id": "36820426-b1ca-4503-8a02-daf4a9f4ccfd",
              "name": "chat",
              "value": "={{ $json.chat }}",
              "type": "boolean"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -144,
        -480
      ],
      "id": "8f29285d-d868-40c7-a4cc-67a63710d417",
      "name": "Set data"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('Set data').item.json.flowdata.url }}/api/v1/accounts/{{ $('Set data').item.json.flowdata.account_id }}/conversations/{{ $('Set data').item.json.flowdata.conversation_id }}/messages/",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "content",
              "value": "={{ $('Refiner').item.json.output }}"
            },
            {
              "name": "private",
              "value": "false"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2736,
        -288
      ],
      "id": "104e1cb6-ba7b-4c60-a1b5-99d81faa2857",
      "name": "Send message",
      "credentials": {
        "httpHeaderAuth": {
          "id": "nWyAJQsTprwGKxtE",
          "name": "Chatwoot - Header Auth"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('Set data').item.json.flowdata.conversation_id }}",
        "tableName": "={{ $('Set data').item.json.flowdata.project_name }}_n8n_chat_histories",
        "contextWindowLength": 20
      },
      "type": "@n8n/n8n-nodes-langchain.memoryPostgresChat",
      "typeVersion": 1.3,
      "position": [
        2272,
        -256
      ],
      "id": "136ea3f9-d4e1-43a0-aa8c-f7a16fd3413a",
      "name": "Postgres Chat Memory",
      "credentials": {
        "postgres": {
          "id": "xKI0Rsj9nPwMEm0Q",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "8dbf19e8-e871-4c1d-9dc2-f1d4f4103841",
              "leftValue": "={{ $json.flowdata.admin }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "false",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        80,
        -480
      ],
      "id": "a3e76bb0-3479-4b7e-8e62-e980d1b00561",
      "name": "Filter admin",
      "disabled": true
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "2f9ad325-43d1-40f3-867b-a1f883cbf221",
              "leftValue": "={{ $json.flowdata.admin }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        304,
        -480
      ],
      "id": "0d329e37-c791-47ed-82d1-63f12f6f759d",
      "name": "Filter all except admin",
      "disabled": true
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "OdGlhJN4N2yn72zW",
          "mode": "list",
          "cachedResultName": "build-system-message - v1"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "language": "Espa√±ol",
            "conversation_id": "={{ $('Set data').item.json.flowdata.conversation_id }}",
            "business_name": "={{ $('Set data').item.json.flowdata.project_name }}"
          },
          "matchingColumns": [
            "language"
          ],
          "schema": [
            {
              "id": "language",
              "displayName": "language",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "business_name",
              "displayName": "business_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "conversation_id",
              "displayName": "conversation_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "number",
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": true
        },
        "options": {
          "waitForSubWorkflow": true
        }
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.2,
      "position": [
        1424,
        -480
      ],
      "id": "d3ce7419-05bc-4cc7-b3b1-aab27595b3bd",
      "name": "build-system-message-v1"
    },
    {
      "parameters": {
        "authentication": "serviceAccount",
        "documentId": {
          "__rl": true,
          "value": "1VgzRX4sB431iHLcJpV0ok03HDdIyKILuzsGAk84tCjo",
          "mode": "list",
          "cachedResultName": "Evaluations",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1VgzRX4sB431iHLcJpV0ok03HDdIyKILuzsGAk84tCjo/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Sheet1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1VgzRX4sB431iHLcJpV0ok03HDdIyKILuzsGAk84tCjo/edit#gid=0"
        }
      },
      "type": "n8n-nodes-base.evaluationTrigger",
      "typeVersion": 4.6,
      "position": [
        -592,
        -672
      ],
      "id": "9cd0d01b-2681-44bc-a633-d2882845df3b",
      "name": "When fetching a dataset row",
      "credentials": {
        "googleApi": {
          "id": "UDitTNIuZ8oToriK",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "8bb15ae9-aaa0-4b2f-bfb5-a277f4dae582",
              "name": "body.message_type",
              "value": "=incoming",
              "type": "string"
            },
            {
              "id": "e24befd1-922a-42fc-80b4-ad26331ed110",
              "name": "body.conversation.labels",
              "value": "=[]",
              "type": "array"
            },
            {
              "id": "cc94dfe0-140b-4bbe-98fd-b66653c915d6",
              "name": "body.attachments",
              "value": "=[]",
              "type": "array"
            },
            {
              "id": "43ab7f16-533b-4d5b-a6da-821b7050c8be",
              "name": "body.conversation.messages[0].attachments[0].file_type",
              "value": "=",
              "type": "string"
            },
            {
              "id": "1b2a551e-92e9-4ae5-a943-f496759199b4",
              "name": "body.account.id",
              "value": "=1",
              "type": "number"
            },
            {
              "id": "8c10811b-3923-4b22-b868-fec06fa856ed",
              "name": "body.conversation.messages[0].conversation_id",
              "value": "=1000000",
              "type": "number"
            },
            {
              "id": "6ef36fd7-bef2-4f0d-a5a7-84b79681d4c2",
              "name": "body.conversation.messages[0].created_at",
              "value": "={{ Math.floor(Date.now() / 1000) }}",
              "type": "string"
            },
            {
              "id": "c2b0e878-3336-4815-8971-bcee6673b0de",
              "name": "body.conversation.messages[0].id",
              "value": "={{ $json.row_number }}",
              "type": "number"
            },
            {
              "id": "ca83f9c5-edff-45aa-b924-4365b86aa076",
              "name": "body.conversation.messages[0].content",
              "value": "={{ $json.user_message }}",
              "type": "string"
            },
            {
              "id": "c9065bdc-aa73-4426-962a-f9daf2468871",
              "name": "body.conversation.messages[0].attachments[0].data_url",
              "value": "=",
              "type": "string"
            },
            {
              "id": "fa382860-2e45-4013-a83f-91fb70b9fab7",
              "name": "body.conversation.timestamp",
              "value": "={{ Math.floor(Date.now() / 1000) }}",
              "type": "string"
            },
            {
              "id": "28f689a1-7ffd-4913-9ea5-0c3d703980e7",
              "name": "evaluation",
              "value": true,
              "type": "boolean"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -368,
        -672
      ],
      "id": "be774bd8-e86c-4ceb-9e19-d56cf4e9f455",
      "name": "Set data for evaluations"
    },
    {
      "parameters": {
        "authentication": "serviceAccount",
        "documentId": {
          "__rl": true,
          "value": "1VgzRX4sB431iHLcJpV0ok03HDdIyKILuzsGAk84tCjo",
          "mode": "list",
          "cachedResultName": "Evaluations",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1VgzRX4sB431iHLcJpV0ok03HDdIyKILuzsGAk84tCjo/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Sheet1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1VgzRX4sB431iHLcJpV0ok03HDdIyKILuzsGAk84tCjo/edit#gid=0"
        },
        "outputs": {
          "values": [
            {
              "outputName": "actual_output",
              "outputValue": "={{ $json.output }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.evaluation",
      "typeVersion": 4.6,
      "position": [
        2736,
        -672
      ],
      "id": "68200564-94fd-4210-9593-cbc2cc6fea71",
      "name": "Evaluation1",
      "credentials": {
        "googleApi": {
          "id": "UDitTNIuZ8oToriK",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "VCUyNC1JY5SRuMOc",
          "mode": "list",
          "cachedResultName": "transcribe-media - v1.1"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "text": "={{ $('Set data').item.json.flowdata.content }}",
            "media_url": "={{ $('Set data').item.json.flowdata.media_url }}",
            "media_type": "={{ $('Set data').item.json.flowdata.file_type }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "text",
              "displayName": "text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "media_type",
              "displayName": "media_type",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "media_url",
              "displayName": "media_url",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": true
        },
        "options": {
          "waitForSubWorkflow": true
        }
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.2,
      "position": [
        752,
        -480
      ],
      "id": "2d8ab7e7-dd30-48a0-a04e-521ecce6cc21",
      "name": "transcribe-media-v1.1"
    },
    {
      "parameters": {
        "operation": "push",
        "list": "={{ $('Set data').item.json.flowdata.project_name}}_{{ $('Set data').item.json.flowdata.account_id}}_{{ $('Set data').item.json.flowdata.conversation_id }}",
        "messageData": "={\"last_message_from\": \"bot\"}",
        "tail": true
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        2960,
        -288
      ],
      "id": "b9e75f7e-e48b-412f-a793-8fae3cb12e75",
      "name": "Set last message from bot",
      "credentials": {
        "redis": {
          "id": "zlVWqKFSgUSVauIh",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "AWG4w99lv1o0Ni6m",
          "mode": "list",
          "cachedResultName": "firewall - v1.1"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "incoming": "={{ $('Set data').item.json.flowdata.incoming }}",
            "human": "={{ $('Set data').item.json.flowdata.human }}",
            "human_pause": "={{ $('Set data').item.json.flowdata['human-pause'] }}",
            "account_id": "={{ $('Set data').item.json.flowdata.account_id }}",
            "conversation_id": "={{ $('Set data').item.json.flowdata.conversation_id }}",
            "message_id": "={{ $('Set data').item.json.flowdata.message_id }}",
            "human_pause_duration_in_minuts": 60,
            "project_name": "={{ $('Set data').item.json.flowdata.project_name }}",
            "chatwoot_url": "={{ $('Set data').item.json.flowdata.url }}",
            "message_content": "={{ $('Set data').item.json.flowdata.content }}",
            "created_at": "={{ $('Set data').item.json.flowdata.created_at }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "project_name",
              "displayName": "project_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "chatwoot_url",
              "displayName": "chatwoot_url",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "account_id",
              "displayName": "account_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "number"
            },
            {
              "id": "conversation_id",
              "displayName": "conversation_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "number"
            },
            {
              "id": "message_id",
              "displayName": "message_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "number"
            },
            {
              "id": "message_content",
              "displayName": "message_content",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "incoming",
              "displayName": "incoming",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "boolean"
            },
            {
              "id": "human",
              "displayName": "human",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "boolean"
            },
            {
              "id": "human_pause",
              "displayName": "human_pause",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "boolean"
            },
            {
              "id": "human_pause_duration_in_minuts",
              "displayName": "human_pause_duration_in_minuts",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "number"
            },
            {
              "id": "created_at",
              "displayName": "created_at",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": true
        },
        "options": {
          "waitForSubWorkflow": true
        }
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.2,
      "position": [
        528,
        -480
      ],
      "id": "5a8d7825-1831-474a-9d8c-0bd1a5ffe5d3",
      "name": "firewall"
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "5xhl7fXA6zZ2giCY",
          "mode": "list",
          "cachedResultName": "message-buffer - v1.1"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "message_id": "={{ $('Set data').item.json.flowdata.message_id }}",
            "session_id": "={{ $('Set data').item.json.flowdata.project_name }}_{{ $('Set data').item.json.flowdata.account_id }}_{{ $('Set data').item.json.flowdata.conversation_id }}_buffer",
            "session_input": "={{ $json.text }}",
            "session_timestamp": "={{ $('Set data').item.json.flowdata.created_at.toDateTime() }}",
            "time_to_wait_in_seconds": 30
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "message_id",
              "displayName": "message_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "number"
            },
            {
              "id": "session_id",
              "displayName": "session_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "session_input",
              "displayName": "session_input",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "session_timestamp",
              "displayName": "session_timestamp",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "time_to_wait_in_seconds",
              "displayName": "time_to_wait_in_seconds",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "number",
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": true
        },
        "options": {
          "waitForSubWorkflow": true
        }
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.2,
      "position": [
        976,
        -480
      ],
      "id": "f7094b03-0d0d-4a77-884e-0b2d6dcce1ec",
      "name": "message-buffer"
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "mzvNC7jcWWGvlZOE",
          "mode": "list",
          "cachedResultName": "clean-supabase"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "chatHistoriesTableName": "tu_ia_n8n_chat_histories",
            "agendaTableName": "tu_ia_agenda",
            "numberOfRecordsToKeep": 12
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "chatHistoriesTableName",
              "displayName": "chatHistoriesTableName",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "numberOfRecordsToKeep",
              "displayName": "numberOfRecordsToKeep",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "number"
            },
            {
              "id": "agendaTableName",
              "displayName": "agendaTableName",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": true
        },
        "options": {}
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.2,
      "position": [
        -368,
        -64
      ],
      "id": "98f950c4-d521-4653-a31b-18cd760debc3",
      "name": "clean-supabase"
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "weeks"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        -592,
        -64
      ],
      "id": "5238bfc2-9e3c-4cd7-bb57-7d2e6b770c50",
      "name": "Clean databases"
    },
    {
      "parameters": {
        "description": "={{ $('build-system-message-v1').item.json.tool_company_info }}",
        "workflowId": {
          "__rl": true,
          "value": "o5iBcZBI2xVbLye5",
          "mode": "list",
          "cachedResultName": "agent-assistant"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "query": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('query', ``, 'string') }}",
            "system_message": "={{ $('build-system-message-v1').item.json.agent_agent_assistant }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "query",
              "displayName": "query",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "system_message",
              "displayName": "system_message",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.2,
      "position": [
        1904,
        -256
      ],
      "id": "d4d7e212-7361-43d3-9a32-9d5b5509f8fe",
      "name": "company-info"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4.1-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        1776,
        -256
      ],
      "id": "275f1d1d-81ac-454d-9e08-ff67d948f044",
      "name": "OpenAI Chat Model2",
      "credentials": {
        "openAiApi": {
          "id": "leOLHYOtXey0DgzA",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4o-mini",
          "mode": "list",
          "cachedResultName": "gpt-4o-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        2144,
        -256
      ],
      "id": "cd0de698-f75d-488c-8bda-1f58a9e00b5e",
      "name": "OpenAI Chat Model1",
      "credentials": {
        "openAiApi": {
          "id": "leOLHYOtXey0DgzA",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chatTrigger",
      "typeVersion": 1.1,
      "position": [
        -592,
        -480
      ],
      "id": "0fcc8354-6db9-416b-9a74-8e606d843cbf",
      "name": "When chat message received",
      "webhookId": "db1a2579-c960-45ea-8d74-37fb525a9e19"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "8bb15ae9-aaa0-4b2f-bfb5-a277f4dae582",
              "name": "body.message_type",
              "value": "=incoming",
              "type": "string"
            },
            {
              "id": "e24befd1-922a-42fc-80b4-ad26331ed110",
              "name": "body.conversation.labels",
              "value": "=[]",
              "type": "array"
            },
            {
              "id": "cc94dfe0-140b-4bbe-98fd-b66653c915d6",
              "name": "body.attachments",
              "value": "=[]",
              "type": "array"
            },
            {
              "id": "43ab7f16-533b-4d5b-a6da-821b7050c8be",
              "name": "body.conversation.messages[0].attachments[0].file_type",
              "value": "=",
              "type": "string"
            },
            {
              "id": "1b2a551e-92e9-4ae5-a943-f496759199b4",
              "name": "body.account.id",
              "value": "=1",
              "type": "number"
            },
            {
              "id": "8c10811b-3923-4b22-b868-fec06fa856ed",
              "name": "body.conversation.messages[0].conversation_id",
              "value": "=2000000",
              "type": "number"
            },
            {
              "id": "6ef36fd7-bef2-4f0d-a5a7-84b79681d4c2",
              "name": "body.conversation.messages[0].created_at",
              "value": "={{ Math.floor(Date.now() / 1000) }}",
              "type": "string"
            },
            {
              "id": "c2b0e878-3336-4815-8971-bcee6673b0de",
              "name": "body.conversation.messages[0].id",
              "value": "=999",
              "type": "number"
            },
            {
              "id": "ca83f9c5-edff-45aa-b924-4365b86aa076",
              "name": "body.conversation.messages[0].content",
              "value": "={{ $json.chatInput }}",
              "type": "string"
            },
            {
              "id": "c9065bdc-aa73-4426-962a-f9daf2468871",
              "name": "body.conversation.messages[0].attachments[0].data_url",
              "value": "=",
              "type": "string"
            },
            {
              "id": "fa382860-2e45-4013-a83f-91fb70b9fab7",
              "name": "body.conversation.timestamp",
              "value": "={{ Math.floor(Date.now() / 1000) }}",
              "type": "string"
            },
            {
              "id": "28f689a1-7ffd-4913-9ea5-0c3d703980e7",
              "name": "evaluation",
              "value": false,
              "type": "boolean"
            },
            {
              "id": "dbada595-b0cf-421c-8fbc-e52c4b356377",
              "name": "chat",
              "value": true,
              "type": "boolean"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -368,
        -480
      ],
      "id": "18d34071-4c00-4b89-8f59-25c8d5209d54",
      "name": "Set data for chat"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Set data').item.json.evaluation }}",
                    "rightValue": "",
                    "operator": {
                      "type": "boolean",
                      "operation": "true",
                      "singleValue": true
                    },
                    "id": "756783ce-30db-4cf9-b983-02fe716523b2"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "evaluation"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "12f5e1c9-db0e-4943-9e44-01f89e94f38a",
                    "leftValue": "={{ $('Set data').item.json.chat }}",
                    "rightValue": "chat",
                    "operator": {
                      "type": "boolean",
                      "operation": "true",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "chat"
            }
          ]
        },
        "options": {
          "fallbackOutput": "extra",
          "renameFallbackOutput": "chatwoot"
        }
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        2512,
        -496
      ],
      "id": "aee40518-b198-43b5-b5d4-6cb0da3e0118",
      "name": "Switch"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        2736,
        -480
      ],
      "id": "55cb5efd-ea07-47d1-b400-ad5e919d3ebe",
      "name": "Chat"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $('message-buffer').first().json.output }}",
        "needsFallback": true,
        "options": {
          "systemMessage": "={{ $json.agent_main }}"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.1,
      "position": [
        1680,
        -480
      ],
      "id": "d7c2b9de-0ae2-42bd-9f28-911cc5f2344e",
      "name": "Main agent"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $('message-buffer').item.json.output }}",
        "options": {
          "systemMessage": "=La respuesta-de-la-ia fue la siguiente:\n\"{{ $json.output }}\"\n\n---\n\n{{ $('build-system-message-v1').item.json.agent_refiner }}\n"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.1,
      "position": [
        2112,
        -480
      ],
      "id": "f4066e15-16f4-4068-808e-69f941395912",
      "name": "Refiner"
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "Zj5geDd7lXjg5YDb",
          "mode": "list",
          "cachedResultName": "bot-detector - v1"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "user_message": "={{ $json.output }}",
            "conversation_id": "={{ $('Set data').item.json.flowdata.conversation_id }}",
            "client_name": "={{ $('Set data').item.json.flowdata.project_name }}"
          },
          "matchingColumns": [
            "output_firstItem",
            "flowdata_conversation_id_toString"
          ],
          "schema": [
            {
              "id": "client_name",
              "displayName": "client_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "user_message",
              "displayName": "user_message",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "conversation_id",
              "displayName": "conversation_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "number",
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": true
        },
        "options": {
          "waitForSubWorkflow": true
        }
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.2,
      "position": [
        1200,
        -480
      ],
      "name": "bot-detector",
      "id": "f5fe1348-66f4-4319-a0ed-e435ad782ee4"
    }
  ],
  "connections": {
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Main agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Chatwoot": {
      "main": [
        [
          {
            "node": "Set data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set data": {
      "main": [
        [
          {
            "node": "Filter admin",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send message": {
      "main": [
        [
          {
            "node": "Set last message from bot",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres Chat Memory": {
      "ai_memory": [
        [
          {
            "node": "Refiner",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Filter admin": {
      "main": [
        [
          {
            "node": "Filter all except admin",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter all except admin": {
      "main": [
        [
          {
            "node": "firewall",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "build-system-message-v1": {
      "main": [
        [
          {
            "node": "Main agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "When fetching a dataset row": {
      "main": [
        [
          {
            "node": "Set data for evaluations",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set data for evaluations": {
      "main": [
        [
          {
            "node": "Set data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "transcribe-media-v1.1": {
      "main": [
        [
          {
            "node": "message-buffer",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set last message from bot": {
      "main": [
        []
      ]
    },
    "firewall": {
      "main": [
        [
          {
            "node": "transcribe-media-v1.1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "message-buffer": {
      "main": [
        [
          {
            "node": "bot-detector",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Clean databases": {
      "main": [
        [
          {
            "node": "clean-supabase",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "company-info": {
      "ai_tool": [
        [
          {
            "node": "Main agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model2": {
      "ai_languageModel": [
        [
          {
            "node": "Main agent",
            "type": "ai_languageModel",
            "index": 1
          }
        ]
      ]
    },
    "OpenAI Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "Refiner",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "When chat message received": {
      "main": [
        [
          {
            "node": "Set data for chat",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set data for chat": {
      "main": [
        [
          {
            "node": "Set data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "Evaluation1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Chat",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Send message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Main agent": {
      "main": [
        [
          {
            "node": "Refiner",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Refiner": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "bot-detector": {
      "main": [
        [
          {
            "node": "build-system-message-v1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  }
}